{"ast":null,"code":"var _jsxFileName = \"/Users/amuka/Desktop/Projects/countries/src/components/SelectRegions.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\nexport default function SelectRegions() {\n  _s();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300,\n        mt: 3,\n        marginRight: \"75px\",\n        backgroundColor: \"#ffffff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return \"Filter by Region\";\n          }\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectRegions, \"sfDDdSu1JVzyreev7Xrw9PfgWAE=\", false, function () {\n  return [useTheme];\n});\n_c = SelectRegions;\nvar _c;\n$RefreshReg$(_c, \"SelectRegions\");","map":{"version":3,"names":["React","useTheme","OutlinedInput","MenuItem","FormControl","Select","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","SelectRegions","_s","setPersonName","useState","handleChange","event","target","value","split","children","sx","m","mt","marginRight","backgroundColor","multiple","displayEmpty","onChange","input","fileName","_jsxFileName","lineNumber","columnNumber","renderValue","selected","length","join","inputProps","map","_c","$RefreshReg$"],"sources":["/Users/amuka/Desktop/Projects/countries/src/components/SelectRegions.js"],"sourcesContent":["import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function SelectRegions() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300, mt: 3,marginRight:\"75px\",backgroundColor:\"#ffffff\" }}>\n        <Select\n          multiple\n          displayEmpty\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput />}\n          renderValue={(selected) => {\n            if (selected.length === 0) {\n              return \"Filter by Region\";\n            }\n\n            return selected.join(', ');\n          }}\n          MenuProps={MenuProps}\n          inputProps={{ 'aria-label': 'Without label' }}\n        >\n        \n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}